digraph AST {
  node [color=lightblue2, style=filled];
  node0 [label="ROOT"];
  node1 [label="SCRIPT"];
  node0 -> node1 [weight=1];
  node2 [label="CONST"];
  node1 -> node2 [weight=1];
  node3 [label="DESTRUCTURING_LHS"];
  node2 -> node3 [weight=1];
  node4 [label="OBJECT_PATTERN"];
  node3 -> node4 [weight=1];
  node5 [label="STRING_KEY(Contract)"];
  node4 -> node5 [weight=1];
  node6 [label="NAME(Contract)"];
  node5 -> node6 [weight=1];
  node7 [label="CALL"];
  node3 -> node7 [weight=1];
  node8 [label="NAME(require)"];
  node7 -> node8 [weight=1];
  node9 [label="STRINGLIT(fabric-con)"];
  node7 -> node9 [weight=1];
  node10 [label="NAME(balancePre)"];
  node2 -> node10 [weight=1];
  node11 [label="STRINGLIT(balance)"];
  node10 -> node11 [weight=1];
  node12 [label="NAME(nftPrefix)"];
  node2 -> node12 [weight=1];
  node13 [label="STRINGLIT(nft)"];
  node12 -> node13 [weight=1];
  node14 [label="NAME(approvalPr)"];
  node2 -> node14 [weight=1];
  node15 [label="STRINGLIT(approval)"];
  node14 -> node15 [weight=1];
  node16 [label="NAME(nameKey)"];
  node2 -> node16 [weight=1];
  node17 [label="STRINGLIT(name)"];
  node16 -> node17 [weight=1];
  node18 [label="NAME(symbolKey)"];
  node2 -> node18 [weight=1];
  node19 [label="STRINGLIT(symbol)"];
  node18 -> node19 [weight=1];
  node20 [label="CLASS"];
  node2 -> node20 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node1 -> node20 [weight=1];
  node21 [label="NAME(TokenERC72)"];
  node20 -> node21 [weight=1];
  node22 [label="NAME(Contract)"];
  node20 -> node22 [weight=1];
  node23 [label="CLASS_MEMBERS"];
  node20 -> node23 [weight=1];
  node24 [label="MEMBER_FUNCTION_DEF"];
  node23 -> node24 [weight=1];
  node25 [label="FUNCTION"];
  node24 -> node25 [weight=1];
  node26 [label="NAME"];
  node25 -> node26 [weight=1];
  node27 [label="PARAM_LIST"];
  node25 -> node27 [weight=1];
  node28 [label="NAME(a)"];
  node27 -> node28 [weight=1];
  node29 [label="NAME(b)"];
  node27 -> node29 [weight=1];
  node30 [label="BLOCK"];
  node25 -> node30 [weight=1];
  node31 [label="EXPR_RESULT"];
  node30 -> node31 [weight=1];
  node32 [label="AWAIT"];
  node31 -> node32 [weight=1];
  node33 [label="CALL"];
  node32 -> node33 [weight=1];
  node34 [label="GETPROP(CheckIniti)"];
  node33 -> node34 [weight=1];
  node35 [label="THIS"];
  node34 -> node35 [weight=1];
  node36 [label="NAME(a)"];
  node33 -> node36 [weight=1];
  node37 [label="EXPR_RESULT"];
  node31 -> node37 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node30 -> node37 [weight=1];
  node38 [label="ASSIGN"];
  node37 -> node38 [weight=1];
  node39 [label="NAME(a)"];
  node38 -> node39 [weight=1];
  node40 [label="AWAIT"];
  node38 -> node40 [weight=1];
  node41 [label="CALL"];
  node40 -> node41 [weight=1];
  node42 [label="GETPROP(getStateBy)"];
  node41 -> node42 [weight=1];
  node43 [label="GETPROP(stub)"];
  node42 -> node43 [weight=1];
  node44 [label="NAME(a)"];
  node43 -> node44 [weight=1];
  node45 [label="NAME(balancePre)"];
  node41 -> node45 [weight=1];
  node46 [label="ARRAYLIT"];
  node41 -> node46 [weight=1];
  node47 [label="NAME(b)"];
  node46 -> node47 [weight=1];
  node48 [label="EXPR_RESULT"];
  node37 -> node48 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node30 -> node48 [weight=1];
  node49 [label="ASSIGN"];
  node48 -> node49 [weight=1];
  node50 [label="NAME(b)"];
  node49 -> node50 [weight=1];
  node51 [label="NUMBER"];
  node49 -> node51 [weight=1];
  node52 [label="LET"];
  node48 -> node52 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node30 -> node52 [weight=1];
  node53 [label="NAME(c)"];
  node52 -> node53 [weight=1];
  node54 [label="AWAIT"];
  node53 -> node54 [weight=1];
  node55 [label="CALL"];
  node54 -> node55 [weight=1];
  node56 [label="GETPROP(next)"];
  node55 -> node56 [weight=1];
  node57 [label="NAME(a)"];
  node56 -> node57 [weight=1];
  node58 [label="EMPTY"];
  node52 -> node58 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node59 [label="FOR"];
  node30 -> node59 [weight=1];
  node59 -> node58 [weight=1];
  node58 -> node59 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node60 [label="NOT"];
  node59 -> node60 [weight=1];
  node61 [label="GETPROP(done)"];
  node60 -> node61 [weight=1];
  node62 [label="NAME(c)"];
  node61 -> node62 [weight=1];
  node63 [label="EMPTY"];
  node59 -> node63 [weight=1];
  node63 -> node59 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node64 [label="BLOCK"];
  node59 -> node64 [weight=1];
  node65 [label="EXPR_RESULT"];
  node64 -> node65 [weight=1];
  node66 [label="COMMA"];
  node65 -> node66 [weight=1];
  node67 [label="INC"];
  node66 -> node67 [weight=1];
  node68 [label="NAME(b)"];
  node67 -> node68 [weight=1];
  node69 [label="ASSIGN"];
  node66 -> node69 [weight=1];
  node70 [label="NAME(c)"];
  node69 -> node70 [weight=1];
  node71 [label="AWAIT"];
  node69 -> node71 [weight=1];
  node72 [label="CALL"];
  node71 -> node72 [weight=1];
  node73 [label="GETPROP(next)"];
  node72 -> node73 [weight=1];
  node74 [label="NAME(a)"];
  node73 -> node74 [weight=1];
  node65 -> node63 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node64 -> node65 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node75 [label="RETURN"];
  node59 -> node64 [label="ON_TRUE", fontcolor="red", weight=0.01, color="red"];
  node59 -> node75 [label="ON_FALSE", fontcolor="red", weight=0.01, color="red"];
  node30 -> node75 [weight=1];
  node76 [label="NAME(b)"];
  node75 -> node76 [weight=1];
  node75 -> RETURN [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node30 -> node31 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node25 -> node30 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node77 [label="MEMBER_FUNCTION_DEF"];
  node23 -> node77 [weight=1];
  node78 [label="FUNCTION"];
  node77 -> node78 [weight=1];
  node79 [label="NAME"];
  node78 -> node79 [weight=1];
  node80 [label="PARAM_LIST"];
  node78 -> node80 [weight=1];
  node81 [label="NAME(a)"];
  node80 -> node81 [weight=1];
  node82 [label="NAME(b)"];
  node80 -> node82 [weight=1];
  node83 [label="BLOCK"];
  node78 -> node83 [weight=1];
  node84 [label="EXPR_RESULT"];
  node83 -> node84 [weight=1];
  node85 [label="AWAIT"];
  node84 -> node85 [weight=1];
  node86 [label="CALL"];
  node85 -> node86 [weight=1];
  node87 [label="GETPROP(CheckIniti)"];
  node86 -> node87 [weight=1];
  node88 [label="THIS"];
  node87 -> node88 [weight=1];
  node89 [label="NAME(a)"];
  node86 -> node89 [weight=1];
  node90 [label="EXPR_RESULT"];
  node84 -> node90 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node83 -> node90 [weight=1];
  node91 [label="ASSIGN"];
  node90 -> node91 [weight=1];
  node92 [label="NAME(a)"];
  node91 -> node92 [weight=1];
  node93 [label="GETPROP(owner)"];
  node91 -> node93 [weight=1];
  node94 [label="AWAIT"];
  node93 -> node94 [weight=1];
  node95 [label="CALL"];
  node94 -> node95 [weight=1];
  node96 [label="GETPROP(_readNFT)"];
  node95 -> node96 [weight=1];
  node97 [label="THIS"];
  node96 -> node97 [weight=1];
  node98 [label="NAME(a)"];
  node95 -> node98 [weight=1];
  node99 [label="NAME(b)"];
  node95 -> node99 [weight=1];
  node100 [label="IF"];
  node90 -> node100 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node83 -> node100 [weight=1];
  node101 [label="NOT"];
  node100 -> node101 [weight=1];
  node102 [label="NAME(a)"];
  node101 -> node102 [weight=1];
  node103 [label="BLOCK"];
  node100 -> node103 [weight=1];
  node104 [label="THROW"];
  node103 -> node104 [weight=1];
  node105 [label="CALL"];
  node104 -> node105 [weight=1];
  node106 [label="NAME(Error)"];
  node105 -> node106 [weight=1];
  node107 [label="STRINGLIT(No owner i)"];
  node105 -> node107 [weight=1];
  node103 -> node104 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node108 [label="RETURN"];
  node100 -> node103 [label="ON_TRUE", fontcolor="red", weight=0.01, color="red"];
  node100 -> node108 [label="ON_FALSE", fontcolor="red", weight=0.01, color="red"];
  node83 -> node108 [weight=1];
  node109 [label="NAME(a)"];
  node108 -> node109 [weight=1];
  node108 -> RETURN [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node83 -> node84 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node78 -> node83 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node110 [label="MEMBER_FUNCTION_DEF"];
  node23 -> node110 [weight=1];
  node111 [label="FUNCTION"];
  node110 -> node111 [weight=1];
  node112 [label="NAME"];
  node111 -> node112 [weight=1];
  node113 [label="PARAM_LIST"];
  node111 -> node113 [weight=1];
  node114 [label="NAME(a)"];
  node113 -> node114 [weight=1];
  node115 [label="NAME(b)"];
  node113 -> node115 [weight=1];
  node116 [label="NAME(c)"];
  node113 -> node116 [weight=1];
  node117 [label="NAME(d)"];
  node113 -> node117 [weight=1];
  node118 [label="BLOCK"];
  node111 -> node118 [weight=1];
  node119 [label="EXPR_RESULT"];
  node118 -> node119 [weight=1];
  node120 [label="AWAIT"];
  node119 -> node120 [weight=1];
  node121 [label="CALL"];
  node120 -> node121 [weight=1];
  node122 [label="GETPROP(CheckIniti)"];
  node121 -> node122 [weight=1];
  node123 [label="THIS"];
  node122 -> node123 [weight=1];
  node124 [label="NAME(a)"];
  node121 -> node124 [weight=1];
  node125 [label="VAR"];
  node119 -> node125 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node118 -> node125 [weight=1];
  node126 [label="NAME(f)"];
  node125 -> node126 [weight=1];
  node127 [label="CALL"];
  node126 -> node127 [weight=1];
  node128 [label="GETPROP(getID)"];
  node127 -> node128 [weight=1];
  node129 [label="GETPROP(clientIden)"];
  node128 -> node129 [weight=1];
  node130 [label="NAME(a)"];
  node129 -> node130 [weight=1];
  node131 [label="NAME(e)"];
  node125 -> node131 [weight=1];
  node132 [label="AWAIT"];
  node131 -> node132 [weight=1];
  node133 [label="CALL"];
  node132 -> node133 [weight=1];
  node134 [label="GETPROP(_readNFT)"];
  node133 -> node134 [weight=1];
  node135 [label="THIS"];
  node134 -> node135 [weight=1];
  node136 [label="NAME(a)"];
  node133 -> node136 [weight=1];
  node137 [label="NAME(d)"];
  node133 -> node137 [weight=1];
  node138 [label="CONST"];
  node125 -> node138 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node118 -> node138 [weight=1];
  node139 [label="NAME(g)"];
  node138 -> node139 [weight=1];
  node140 [label="GETPROP(owner)"];
  node139 -> node140 [weight=1];
  node141 [label="NAME(e)"];
  node140 -> node141 [weight=1];
  node142 [label="NAME(h)"];
  node138 -> node142 [weight=1];
  node143 [label="GETPROP(approved)"];
  node142 -> node143 [weight=1];
  node144 [label="NAME(e)"];
  node143 -> node144 [weight=1];
  node145 [label="NAME(k)"];
  node138 -> node145 [weight=1];
  node146 [label="AWAIT"];
  node145 -> node146 [weight=1];
  node147 [label="CALL"];
  node146 -> node147 [weight=1];
  node148 [label="GETPROP(IsApproved)"];
  node147 -> node148 [weight=1];
  node149 [label="THIS"];
  node148 -> node149 [weight=1];
  node150 [label="NAME(a)"];
  node147 -> node150 [weight=1];
  node151 [label="NAME(g)"];
  node147 -> node151 [weight=1];
  node152 [label="NAME(f)"];
  node147 -> node152 [weight=1];
  node153 [label="IF"];
  node138 -> node153 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node118 -> node153 [weight=1];
  node154 [label="AND"];
  node153 -> node154 [weight=1];
  node155 [label="AND"];
  node154 -> node155 [weight=1];
  node156 [label="SHNE"];
  node155 -> node156 [weight=1];
  node157 [label="NAME(g)"];
  node156 -> node157 [weight=1];
  node158 [label="NAME(f)"];
  node156 -> node158 [weight=1];
  node159 [label="SHNE"];
  node155 -> node159 [weight=1];
  node160 [label="NAME(h)"];
  node159 -> node160 [weight=1];
  node161 [label="NAME(f)"];
  node159 -> node161 [weight=1];
  node162 [label="NOT"];
  node154 -> node162 [weight=1];
  node163 [label="NAME(k)"];
  node162 -> node163 [weight=1];
  node164 [label="BLOCK"];
  node153 -> node164 [weight=1];
  node165 [label="THROW"];
  node164 -> node165 [weight=1];
  node166 [label="CALL"];
  node165 -> node166 [weight=1];
  node167 [label="NAME(Error)"];
  node166 -> node167 [weight=1];
  node168 [label="STRINGLIT(The sender)"];
  node166 -> node168 [weight=1];
  node164 -> node165 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node169 [label="IF"];
  node153 -> node164 [label="ON_TRUE", fontcolor="red", weight=0.01, color="red"];
  node153 -> node169 [label="ON_FALSE", fontcolor="red", weight=0.01, color="red"];
  node118 -> node169 [weight=1];
  node170 [label="SHNE"];
  node169 -> node170 [weight=1];
  node171 [label="NAME(g)"];
  node170 -> node171 [weight=1];
  node172 [label="NAME(b)"];
  node170 -> node172 [weight=1];
  node173 [label="BLOCK"];
  node169 -> node173 [weight=1];
  node174 [label="THROW"];
  node173 -> node174 [weight=1];
  node175 [label="CALL"];
  node174 -> node175 [weight=1];
  node176 [label="NAME(Error)"];
  node175 -> node176 [weight=1];
  node177 [label="STRINGLIT(The from i)"];
  node175 -> node177 [weight=1];
  node173 -> node174 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node178 [label="EXPR_RESULT"];
  node169 -> node173 [label="ON_TRUE", fontcolor="red", weight=0.01, color="red"];
  node169 -> node178 [label="ON_FALSE", fontcolor="red", weight=0.01, color="red"];
  node118 -> node178 [weight=1];
  node179 [label="ASSIGN"];
  node178 -> node179 [weight=1];
  node180 [label="GETPROP(approved)"];
  node179 -> node180 [weight=1];
  node181 [label="NAME(e)"];
  node180 -> node181 [weight=1];
  node182 [label="STRINGLIT"];
  node179 -> node182 [weight=1];
  node183 [label="EXPR_RESULT"];
  node178 -> node183 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node118 -> node183 [weight=1];
  node184 [label="ASSIGN"];
  node183 -> node184 [weight=1];
  node185 [label="GETPROP(owner)"];
  node184 -> node185 [weight=1];
  node186 [label="NAME(e)"];
  node185 -> node186 [weight=1];
  node187 [label="NAME(c)"];
  node184 -> node187 [weight=1];
  node188 [label="EXPR_RESULT"];
  node183 -> node188 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node118 -> node188 [weight=1];
  node189 [label="ASSIGN"];
  node188 -> node189 [weight=1];
  node190 [label="NAME(f)"];
  node189 -> node190 [weight=1];
  node191 [label="CALL"];
  node189 -> node191 [weight=1];
  node192 [label="GETPROP(createComp)"];
  node191 -> node192 [weight=1];
  node193 [label="GETPROP(stub)"];
  node192 -> node193 [weight=1];
  node194 [label="NAME(a)"];
  node193 -> node194 [weight=1];
  node195 [label="NAME(nftPrefix)"];
  node191 -> node195 [weight=1];
  node196 [label="ARRAYLIT"];
  node191 -> node196 [weight=1];
  node197 [label="NAME(d)"];
  node196 -> node197 [weight=1];
  node198 [label="EXPR_RESULT"];
  node188 -> node198 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node118 -> node198 [weight=1];
  node199 [label="AWAIT"];
  node198 -> node199 [weight=1];
  node200 [label="CALL"];
  node199 -> node200 [weight=1];
  node201 [label="GETPROP(putState)"];
  node200 -> node201 [weight=1];
  node202 [label="GETPROP(stub)"];
  node201 -> node202 [weight=1];
  node203 [label="NAME(a)"];
  node202 -> node203 [weight=1];
  node204 [label="NAME(f)"];
  node200 -> node204 [weight=1];
  node205 [label="CALL"];
  node200 -> node205 [weight=1];
  node206 [label="GETPROP(from)"];
  node205 -> node206 [weight=1];
  node207 [label="NAME(Buffer)"];
  node206 -> node207 [weight=1];
  node208 [label="CALL"];
  node205 -> node208 [weight=1];
  node209 [label="GETPROP(stringify)"];
  node208 -> node209 [weight=1];
  node210 [label="NAME(JSON)"];
  node209 -> node210 [weight=1];
  node211 [label="NAME(e)"];
  node208 -> node211 [weight=1];
  node212 [label="EXPR_RESULT"];
  node198 -> node212 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node118 -> node212 [weight=1];
  node213 [label="ASSIGN"];
  node212 -> node213 [weight=1];
  node214 [label="NAME(e)"];
  node213 -> node214 [weight=1];
  node215 [label="CALL"];
  node213 -> node215 [weight=1];
  node216 [label="GETPROP(createComp)"];
  node215 -> node216 [weight=1];
  node217 [label="GETPROP(stub)"];
  node216 -> node217 [weight=1];
  node218 [label="NAME(a)"];
  node217 -> node218 [weight=1];
  node219 [label="NAME(balancePre)"];
  node215 -> node219 [weight=1];
  node220 [label="ARRAYLIT"];
  node215 -> node220 [weight=1];
  node221 [label="NAME(b)"];
  node220 -> node221 [weight=1];
  node222 [label="NAME(d)"];
  node220 -> node222 [weight=1];
  node223 [label="EXPR_RESULT"];
  node212 -> node223 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node118 -> node223 [weight=1];
  node224 [label="AWAIT"];
  node223 -> node224 [weight=1];
  node225 [label="CALL"];
  node224 -> node225 [weight=1];
  node226 [label="GETPROP(deleteStat)"];
  node225 -> node226 [weight=1];
  node227 [label="GETPROP(stub)"];
  node226 -> node227 [weight=1];
  node228 [label="NAME(a)"];
  node227 -> node228 [weight=1];
  node229 [label="NAME(e)"];
  node225 -> node229 [weight=1];
  node230 [label="EXPR_RESULT"];
  node223 -> node230 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node118 -> node230 [weight=1];
  node231 [label="ASSIGN"];
  node230 -> node231 [weight=1];
  node232 [label="NAME(e)"];
  node231 -> node232 [weight=1];
  node233 [label="CALL"];
  node231 -> node233 [weight=1];
  node234 [label="GETPROP(createComp)"];
  node233 -> node234 [weight=1];
  node235 [label="GETPROP(stub)"];
  node234 -> node235 [weight=1];
  node236 [label="NAME(a)"];
  node235 -> node236 [weight=1];
  node237 [label="NAME(balancePre)"];
  node233 -> node237 [weight=1];
  node238 [label="ARRAYLIT"];
  node233 -> node238 [weight=1];
  node239 [label="NAME(c)"];
  node238 -> node239 [weight=1];
  node240 [label="NAME(d)"];
  node238 -> node240 [weight=1];
  node241 [label="EXPR_RESULT"];
  node230 -> node241 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node118 -> node241 [weight=1];
  node242 [label="AWAIT"];
  node241 -> node242 [weight=1];
  node243 [label="CALL"];
  node242 -> node243 [weight=1];
  node244 [label="GETPROP(putState)"];
  node243 -> node244 [weight=1];
  node245 [label="GETPROP(stub)"];
  node244 -> node245 [weight=1];
  node246 [label="NAME(a)"];
  node245 -> node246 [weight=1];
  node247 [label="NAME(e)"];
  node243 -> node247 [weight=1];
  node248 [label="CALL"];
  node243 -> node248 [weight=1];
  node249 [label="GETPROP(from)"];
  node248 -> node249 [weight=1];
  node250 [label="NAME(Buffer)"];
  node249 -> node250 [weight=1];
  node251 [label="STRINGLIT"];
  node248 -> node251 [weight=1];
  node252 [label="EXPR_RESULT"];
  node241 -> node252 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node118 -> node252 [weight=1];
  node253 [label="ASSIGN"];
  node252 -> node253 [weight=1];
  node254 [label="NAME(d)"];
  node253 -> node254 [weight=1];
  node255 [label="CALL"];
  node253 -> node255 [weight=1];
  node256 [label="NAME(parseInt)"];
  node255 -> node256 [weight=1];
  node257 [label="NAME(d)"];
  node255 -> node257 [weight=1];
  node258 [label="EXPR_RESULT"];
  node252 -> node258 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node118 -> node258 [weight=1];
  node259 [label="CALL"];
  node258 -> node259 [weight=1];
  node260 [label="GETPROP(setEvent)"];
  node259 -> node260 [weight=1];
  node261 [label="GETPROP(stub)"];
  node260 -> node261 [weight=1];
  node262 [label="NAME(a)"];
  node261 -> node262 [weight=1];
  node263 [label="STRINGLIT(Transfer)"];
  node259 -> node263 [weight=1];
  node264 [label="CALL"];
  node259 -> node264 [weight=1];
  node265 [label="GETPROP(from)"];
  node264 -> node265 [weight=1];
  node266 [label="NAME(Buffer)"];
  node265 -> node266 [weight=1];
  node267 [label="CALL"];
  node264 -> node267 [weight=1];
  node268 [label="GETPROP(stringify)"];
  node267 -> node268 [weight=1];
  node269 [label="NAME(JSON)"];
  node268 -> node269 [weight=1];
  node270 [label="OBJECTLIT"];
  node267 -> node270 [weight=1];
  node271 [label="STRING_KEY(from)"];
  node270 -> node271 [weight=1];
  node272 [label="NAME(b)"];
  node271 -> node272 [weight=1];
  node273 [label="STRING_KEY(to)"];
  node270 -> node273 [weight=1];
  node274 [label="NAME(c)"];
  node273 -> node274 [weight=1];
  node275 [label="STRING_KEY(tokenId)"];
  node270 -> node275 [weight=1];
  node276 [label="NAME(d)"];
  node275 -> node276 [weight=1];
  node277 [label="RETURN"];
  node258 -> node277 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node118 -> node277 [weight=1];
  node278 [label="NOT"];
  node277 -> node278 [weight=1];
  node279 [label="NUMBER"];
  node278 -> node279 [weight=1];
  node277 -> RETURN [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node118 -> node119 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node111 -> node118 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node280 [label="MEMBER_FUNCTION_DEF"];
  node23 -> node280 [weight=1];
  node281 [label="FUNCTION"];
  node280 -> node281 [weight=1];
  node282 [label="NAME"];
  node281 -> node282 [weight=1];
  node283 [label="PARAM_LIST"];
  node281 -> node283 [weight=1];
  node284 [label="NAME(a)"];
  node283 -> node284 [weight=1];
  node285 [label="NAME(b)"];
  node283 -> node285 [weight=1];
  node286 [label="NAME(c)"];
  node283 -> node286 [weight=1];
  node287 [label="BLOCK"];
  node281 -> node287 [weight=1];
  node288 [label="EXPR_RESULT"];
  node287 -> node288 [weight=1];
  node289 [label="AWAIT"];
  node288 -> node289 [weight=1];
  node290 [label="CALL"];
  node289 -> node290 [weight=1];
  node291 [label="GETPROP(CheckIniti)"];
  node290 -> node291 [weight=1];
  node292 [label="THIS"];
  node291 -> node292 [weight=1];
  node293 [label="NAME(a)"];
  node290 -> node293 [weight=1];
  node294 [label="VAR"];
  node288 -> node294 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node287 -> node294 [weight=1];
  node295 [label="NAME(d)"];
  node294 -> node295 [weight=1];
  node296 [label="CALL"];
  node295 -> node296 [weight=1];
  node297 [label="GETPROP(getID)"];
  node296 -> node297 [weight=1];
  node298 [label="GETPROP(clientIden)"];
  node297 -> node298 [weight=1];
  node299 [label="NAME(a)"];
  node298 -> node299 [weight=1];
  node300 [label="CONST"];
  node294 -> node300 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node287 -> node300 [weight=1];
  node301 [label="NAME(f)"];
  node300 -> node301 [weight=1];
  node302 [label="AWAIT"];
  node301 -> node302 [weight=1];
  node303 [label="CALL"];
  node302 -> node303 [weight=1];
  node304 [label="GETPROP(_readNFT)"];
  node303 -> node304 [weight=1];
  node305 [label="THIS"];
  node304 -> node305 [weight=1];
  node306 [label="NAME(a)"];
  node303 -> node306 [weight=1];
  node307 [label="NAME(c)"];
  node303 -> node307 [weight=1];
  node308 [label="NAME(e)"];
  node300 -> node308 [weight=1];
  node309 [label="GETPROP(owner)"];
  node308 -> node309 [weight=1];
  node310 [label="NAME(f)"];
  node309 -> node310 [weight=1];
  node311 [label="NAME(g)"];
  node300 -> node311 [weight=1];
  node312 [label="AWAIT"];
  node311 -> node312 [weight=1];
  node313 [label="CALL"];
  node312 -> node313 [weight=1];
  node314 [label="GETPROP(IsApproved)"];
  node313 -> node314 [weight=1];
  node315 [label="THIS"];
  node314 -> node315 [weight=1];
  node316 [label="NAME(a)"];
  node313 -> node316 [weight=1];
  node317 [label="NAME(e)"];
  node313 -> node317 [weight=1];
  node318 [label="NAME(d)"];
  node313 -> node318 [weight=1];
  node319 [label="IF"];
  node300 -> node319 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node287 -> node319 [weight=1];
  node320 [label="AND"];
  node319 -> node320 [weight=1];
  node321 [label="SHNE"];
  node320 -> node321 [weight=1];
  node322 [label="NAME(e)"];
  node321 -> node322 [weight=1];
  node323 [label="NAME(d)"];
  node321 -> node323 [weight=1];
  node324 [label="NOT"];
  node320 -> node324 [weight=1];
  node325 [label="NAME(g)"];
  node324 -> node325 [weight=1];
  node326 [label="BLOCK"];
  node319 -> node326 [weight=1];
  node327 [label="THROW"];
  node326 -> node327 [weight=1];
  node328 [label="CALL"];
  node327 -> node328 [weight=1];
  node329 [label="NAME(Error)"];
  node328 -> node329 [weight=1];
  node330 [label="STRINGLIT(The sender)"];
  node328 -> node330 [weight=1];
  node326 -> node327 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node331 [label="EXPR_RESULT"];
  node319 -> node326 [label="ON_TRUE", fontcolor="red", weight=0.01, color="red"];
  node319 -> node331 [label="ON_FALSE", fontcolor="red", weight=0.01, color="red"];
  node287 -> node331 [weight=1];
  node332 [label="ASSIGN"];
  node331 -> node332 [weight=1];
  node333 [label="GETPROP(approved)"];
  node332 -> node333 [weight=1];
  node334 [label="NAME(f)"];
  node333 -> node334 [weight=1];
  node335 [label="NAME(b)"];
  node332 -> node335 [weight=1];
  node336 [label="EXPR_RESULT"];
  node331 -> node336 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node287 -> node336 [weight=1];
  node337 [label="ASSIGN"];
  node336 -> node337 [weight=1];
  node338 [label="NAME(d)"];
  node337 -> node338 [weight=1];
  node339 [label="CALL"];
  node337 -> node339 [weight=1];
  node340 [label="GETPROP(createComp)"];
  node339 -> node340 [weight=1];
  node341 [label="GETPROP(stub)"];
  node340 -> node341 [weight=1];
  node342 [label="NAME(a)"];
  node341 -> node342 [weight=1];
  node343 [label="NAME(nftPrefix)"];
  node339 -> node343 [weight=1];
  node344 [label="ARRAYLIT"];
  node339 -> node344 [weight=1];
  node345 [label="NAME(c)"];
  node344 -> node345 [weight=1];
  node346 [label="EXPR_RESULT"];
  node336 -> node346 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node287 -> node346 [weight=1];
  node347 [label="AWAIT"];
  node346 -> node347 [weight=1];
  node348 [label="CALL"];
  node347 -> node348 [weight=1];
  node349 [label="GETPROP(putState)"];
  node348 -> node349 [weight=1];
  node350 [label="GETPROP(stub)"];
  node349 -> node350 [weight=1];
  node351 [label="NAME(a)"];
  node350 -> node351 [weight=1];
  node352 [label="NAME(d)"];
  node348 -> node352 [weight=1];
  node353 [label="CALL"];
  node348 -> node353 [weight=1];
  node354 [label="GETPROP(from)"];
  node353 -> node354 [weight=1];
  node355 [label="NAME(Buffer)"];
  node354 -> node355 [weight=1];
  node356 [label="CALL"];
  node353 -> node356 [weight=1];
  node357 [label="GETPROP(stringify)"];
  node356 -> node357 [weight=1];
  node358 [label="NAME(JSON)"];
  node357 -> node358 [weight=1];
  node359 [label="NAME(f)"];
  node356 -> node359 [weight=1];
  node360 [label="EXPR_RESULT"];
  node346 -> node360 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node287 -> node360 [weight=1];
  node361 [label="ASSIGN"];
  node360 -> node361 [weight=1];
  node362 [label="NAME(c)"];
  node361 -> node362 [weight=1];
  node363 [label="CALL"];
  node361 -> node363 [weight=1];
  node364 [label="NAME(parseInt)"];
  node363 -> node364 [weight=1];
  node365 [label="NAME(c)"];
  node363 -> node365 [weight=1];
  node366 [label="EXPR_RESULT"];
  node360 -> node366 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node287 -> node366 [weight=1];
  node367 [label="CALL"];
  node366 -> node367 [weight=1];
  node368 [label="GETPROP(setEvent)"];
  node367 -> node368 [weight=1];
  node369 [label="GETPROP(stub)"];
  node368 -> node369 [weight=1];
  node370 [label="NAME(a)"];
  node369 -> node370 [weight=1];
  node371 [label="STRINGLIT(Approval)"];
  node367 -> node371 [weight=1];
  node372 [label="CALL"];
  node367 -> node372 [weight=1];
  node373 [label="GETPROP(from)"];
  node372 -> node373 [weight=1];
  node374 [label="NAME(Buffer)"];
  node373 -> node374 [weight=1];
  node375 [label="CALL"];
  node372 -> node375 [weight=1];
  node376 [label="GETPROP(stringify)"];
  node375 -> node376 [weight=1];
  node377 [label="NAME(JSON)"];
  node376 -> node377 [weight=1];
  node378 [label="OBJECTLIT"];
  node375 -> node378 [weight=1];
  node379 [label="STRING_KEY(owner)"];
  node378 -> node379 [weight=1];
  node380 [label="NAME(e)"];
  node379 -> node380 [weight=1];
  node381 [label="STRING_KEY(approved)"];
  node378 -> node381 [weight=1];
  node382 [label="NAME(b)"];
  node381 -> node382 [weight=1];
  node383 [label="STRING_KEY(tokenId)"];
  node378 -> node383 [weight=1];
  node384 [label="NAME(c)"];
  node383 -> node384 [weight=1];
  node385 [label="RETURN"];
  node366 -> node385 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node287 -> node385 [weight=1];
  node386 [label="NOT"];
  node385 -> node386 [weight=1];
  node387 [label="NUMBER"];
  node386 -> node387 [weight=1];
  node385 -> RETURN [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node287 -> node288 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node281 -> node287 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node388 [label="MEMBER_FUNCTION_DEF"];
  node23 -> node388 [weight=1];
  node389 [label="FUNCTION"];
  node388 -> node389 [weight=1];
  node390 [label="NAME"];
  node389 -> node390 [weight=1];
  node391 [label="PARAM_LIST"];
  node389 -> node391 [weight=1];
  node392 [label="NAME(a)"];
  node391 -> node392 [weight=1];
  node393 [label="NAME(b)"];
  node391 -> node393 [weight=1];
  node394 [label="NAME(c)"];
  node391 -> node394 [weight=1];
  node395 [label="BLOCK"];
  node389 -> node395 [weight=1];
  node396 [label="EXPR_RESULT"];
  node395 -> node396 [weight=1];
  node397 [label="AWAIT"];
  node396 -> node397 [weight=1];
  node398 [label="CALL"];
  node397 -> node398 [weight=1];
  node399 [label="GETPROP(CheckIniti)"];
  node398 -> node399 [weight=1];
  node400 [label="THIS"];
  node399 -> node400 [weight=1];
  node401 [label="NAME(a)"];
  node398 -> node401 [weight=1];
  node402 [label="CONST"];
  node396 -> node402 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node395 -> node402 [weight=1];
  node403 [label="NAME(d)"];
  node402 -> node403 [weight=1];
  node404 [label="CALL"];
  node403 -> node404 [weight=1];
  node405 [label="GETPROP(getID)"];
  node404 -> node405 [weight=1];
  node406 [label="GETPROP(clientIden)"];
  node405 -> node406 [weight=1];
  node407 [label="NAME(a)"];
  node406 -> node407 [weight=1];
  node408 [label="NAME(f)"];
  node402 -> node408 [weight=1];
  node409 [label="OBJECTLIT"];
  node408 -> node409 [weight=1];
  node410 [label="STRING_KEY(owner)"];
  node409 -> node410 [weight=1];
  node411 [label="NAME(d)"];
  node410 -> node411 [weight=1];
  node412 [label="STRING_KEY(operator)"];
  node409 -> node412 [weight=1];
  node413 [label="NAME(b)"];
  node412 -> node413 [weight=1];
  node414 [label="STRING_KEY(approved)"];
  node409 -> node414 [weight=1];
  node415 [label="NAME(c)"];
  node414 -> node415 [weight=1];
  node416 [label="NAME(e)"];
  node402 -> node416 [weight=1];
  node417 [label="CALL"];
  node416 -> node417 [weight=1];
  node418 [label="GETPROP(createComp)"];
  node417 -> node418 [weight=1];
  node419 [label="GETPROP(stub)"];
  node418 -> node419 [weight=1];
  node420 [label="NAME(a)"];
  node419 -> node420 [weight=1];
  node421 [label="NAME(approvalPr)"];
  node417 -> node421 [weight=1];
  node422 [label="ARRAYLIT"];
  node417 -> node422 [weight=1];
  node423 [label="NAME(d)"];
  node422 -> node423 [weight=1];
  node424 [label="NAME(b)"];
  node422 -> node424 [weight=1];
  node425 [label="EXPR_RESULT"];
  node402 -> node425 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node395 -> node425 [weight=1];
  node426 [label="AWAIT"];
  node425 -> node426 [weight=1];
  node427 [label="CALL"];
  node426 -> node427 [weight=1];
  node428 [label="GETPROP(putState)"];
  node427 -> node428 [weight=1];
  node429 [label="GETPROP(stub)"];
  node428 -> node429 [weight=1];
  node430 [label="NAME(a)"];
  node429 -> node430 [weight=1];
  node431 [label="NAME(e)"];
  node427 -> node431 [weight=1];
  node432 [label="CALL"];
  node427 -> node432 [weight=1];
  node433 [label="GETPROP(from)"];
  node432 -> node433 [weight=1];
  node434 [label="NAME(Buffer)"];
  node433 -> node434 [weight=1];
  node435 [label="CALL"];
  node432 -> node435 [weight=1];
  node436 [label="GETPROP(stringify)"];
  node435 -> node436 [weight=1];
  node437 [label="NAME(JSON)"];
  node436 -> node437 [weight=1];
  node438 [label="NAME(f)"];
  node435 -> node438 [weight=1];
  node439 [label="EXPR_RESULT"];
  node425 -> node439 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node395 -> node439 [weight=1];
  node440 [label="CALL"];
  node439 -> node440 [weight=1];
  node441 [label="GETPROP(setEvent)"];
  node440 -> node441 [weight=1];
  node442 [label="GETPROP(stub)"];
  node441 -> node442 [weight=1];
  node443 [label="NAME(a)"];
  node442 -> node443 [weight=1];
  node444 [label="STRINGLIT(ApprovalFo)"];
  node440 -> node444 [weight=1];
  node445 [label="CALL"];
  node440 -> node445 [weight=1];
  node446 [label="GETPROP(from)"];
  node445 -> node446 [weight=1];
  node447 [label="NAME(Buffer)"];
  node446 -> node447 [weight=1];
  node448 [label="CALL"];
  node445 -> node448 [weight=1];
  node449 [label="GETPROP(stringify)"];
  node448 -> node449 [weight=1];
  node450 [label="NAME(JSON)"];
  node449 -> node450 [weight=1];
  node451 [label="OBJECTLIT"];
  node448 -> node451 [weight=1];
  node452 [label="STRING_KEY(owner)"];
  node451 -> node452 [weight=1];
  node453 [label="NAME(d)"];
  node452 -> node453 [weight=1];
  node454 [label="STRING_KEY(operator)"];
  node451 -> node454 [weight=1];
  node455 [label="NAME(b)"];
  node454 -> node455 [weight=1];
  node456 [label="STRING_KEY(approved)"];
  node451 -> node456 [weight=1];
  node457 [label="NAME(c)"];
  node456 -> node457 [weight=1];
  node458 [label="RETURN"];
  node439 -> node458 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node395 -> node458 [weight=1];
  node459 [label="NOT"];
  node458 -> node459 [weight=1];
  node460 [label="NUMBER"];
  node459 -> node460 [weight=1];
  node458 -> RETURN [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node395 -> node396 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node389 -> node395 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node461 [label="MEMBER_FUNCTION_DEF"];
  node23 -> node461 [weight=1];
  node462 [label="FUNCTION"];
  node461 -> node462 [weight=1];
  node463 [label="NAME"];
  node462 -> node463 [weight=1];
  node464 [label="PARAM_LIST"];
  node462 -> node464 [weight=1];
  node465 [label="NAME(a)"];
  node464 -> node465 [weight=1];
  node466 [label="NAME(b)"];
  node464 -> node466 [weight=1];
  node467 [label="BLOCK"];
  node462 -> node467 [weight=1];
  node468 [label="EXPR_RESULT"];
  node467 -> node468 [weight=1];
  node469 [label="AWAIT"];
  node468 -> node469 [weight=1];
  node470 [label="CALL"];
  node469 -> node470 [weight=1];
  node471 [label="GETPROP(CheckIniti)"];
  node470 -> node471 [weight=1];
  node472 [label="THIS"];
  node471 -> node472 [weight=1];
  node473 [label="NAME(a)"];
  node470 -> node473 [weight=1];
  node474 [label="RETURN"];
  node468 -> node474 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node467 -> node474 [weight=1];
  node475 [label="GETPROP(approved)"];
  node474 -> node475 [weight=1];
  node476 [label="AWAIT"];
  node475 -> node476 [weight=1];
  node477 [label="CALL"];
  node476 -> node477 [weight=1];
  node478 [label="GETPROP(_readNFT)"];
  node477 -> node478 [weight=1];
  node479 [label="THIS"];
  node478 -> node479 [weight=1];
  node480 [label="NAME(a)"];
  node477 -> node480 [weight=1];
  node481 [label="NAME(b)"];
  node477 -> node481 [weight=1];
  node474 -> RETURN [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node467 -> node468 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node462 -> node467 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node482 [label="MEMBER_FUNCTION_DEF"];
  node23 -> node482 [weight=1];
  node483 [label="FUNCTION"];
  node482 -> node483 [weight=1];
  node484 [label="NAME"];
  node483 -> node484 [weight=1];
  node485 [label="PARAM_LIST"];
  node483 -> node485 [weight=1];
  node486 [label="NAME(a)"];
  node485 -> node486 [weight=1];
  node487 [label="NAME(b)"];
  node485 -> node487 [weight=1];
  node488 [label="NAME(c)"];
  node485 -> node488 [weight=1];
  node489 [label="BLOCK"];
  node483 -> node489 [weight=1];
  node490 [label="EXPR_RESULT"];
  node489 -> node490 [weight=1];
  node491 [label="AWAIT"];
  node490 -> node491 [weight=1];
  node492 [label="CALL"];
  node491 -> node492 [weight=1];
  node493 [label="GETPROP(CheckIniti)"];
  node492 -> node493 [weight=1];
  node494 [label="THIS"];
  node493 -> node494 [weight=1];
  node495 [label="NAME(a)"];
  node492 -> node495 [weight=1];
  node496 [label="EXPR_RESULT"];
  node490 -> node496 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node489 -> node496 [weight=1];
  node497 [label="ASSIGN"];
  node496 -> node497 [weight=1];
  node498 [label="NAME(b)"];
  node497 -> node498 [weight=1];
  node499 [label="CALL"];
  node497 -> node499 [weight=1];
  node500 [label="GETPROP(createComp)"];
  node499 -> node500 [weight=1];
  node501 [label="GETPROP(stub)"];
  node500 -> node501 [weight=1];
  node502 [label="NAME(a)"];
  node501 -> node502 [weight=1];
  node503 [label="NAME(approvalPr)"];
  node499 -> node503 [weight=1];
  node504 [label="ARRAYLIT"];
  node499 -> node504 [weight=1];
  node505 [label="NAME(b)"];
  node504 -> node505 [weight=1];
  node506 [label="NAME(c)"];
  node504 -> node506 [weight=1];
  node507 [label="RETURN"];
  node496 -> node507 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node489 -> node507 [weight=1];
  node508 [label="HOOK"];
  node507 -> node508 [weight=1];
  node509 [label="AND"];
  node508 -> node509 [weight=1];
  node510 [label="ASSIGN"];
  node509 -> node510 [weight=1];
  node511 [label="NAME(a)"];
  node510 -> node511 [weight=1];
  node512 [label="AWAIT"];
  node510 -> node512 [weight=1];
  node513 [label="CALL"];
  node512 -> node513 [weight=1];
  node514 [label="GETPROP(getState)"];
  node513 -> node514 [weight=1];
  node515 [label="GETPROP(stub)"];
  node514 -> node515 [weight=1];
  node516 [label="NAME(a)"];
  node515 -> node516 [weight=1];
  node517 [label="NAME(b)"];
  node513 -> node517 [weight=1];
  node518 [label="LT"];
  node509 -> node518 [weight=1];
  node519 [label="NUMBER"];
  node518 -> node519 [weight=1];
  node520 [label="GETPROP(length)"];
  node518 -> node520 [weight=1];
  node521 [label="NAME(a)"];
  node520 -> node521 [weight=1];
  node522 [label="GETPROP(approved)"];
  node508 -> node522 [weight=1];
  node523 [label="CALL"];
  node522 -> node523 [weight=1];
  node524 [label="GETPROP(parse)"];
  node523 -> node524 [weight=1];
  node525 [label="NAME(JSON)"];
  node524 -> node525 [weight=1];
  node526 [label="CALL"];
  node523 -> node526 [weight=1];
  node527 [label="GETPROP(toString)"];
  node526 -> node527 [weight=1];
  node528 [label="NAME(a)"];
  node527 -> node528 [weight=1];
  node529 [label="NOT"];
  node508 -> node529 [weight=1];
  node530 [label="NUMBER"];
  node529 -> node530 [weight=1];
  node507 -> RETURN [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node489 -> node490 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node483 -> node489 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node531 [label="MEMBER_FUNCTION_DEF"];
  node23 -> node531 [weight=1];
  node532 [label="FUNCTION"];
  node531 -> node532 [weight=1];
  node533 [label="NAME"];
  node532 -> node533 [weight=1];
  node534 [label="PARAM_LIST"];
  node532 -> node534 [weight=1];
  node535 [label="NAME(a)"];
  node534 -> node535 [weight=1];
  node536 [label="BLOCK"];
  node532 -> node536 [weight=1];
  node537 [label="EXPR_RESULT"];
  node536 -> node537 [weight=1];
  node538 [label="AWAIT"];
  node537 -> node538 [weight=1];
  node539 [label="CALL"];
  node538 -> node539 [weight=1];
  node540 [label="GETPROP(CheckIniti)"];
  node539 -> node540 [weight=1];
  node541 [label="THIS"];
  node540 -> node541 [weight=1];
  node542 [label="NAME(a)"];
  node539 -> node542 [weight=1];
  node543 [label="RETURN"];
  node537 -> node543 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node536 -> node543 [weight=1];
  node544 [label="CALL"];
  node543 -> node544 [weight=1];
  node545 [label="GETPROP(toString)"];
  node544 -> node545 [weight=1];
  node546 [label="AWAIT"];
  node545 -> node546 [weight=1];
  node547 [label="CALL"];
  node546 -> node547 [weight=1];
  node548 [label="GETPROP(getState)"];
  node547 -> node548 [weight=1];
  node549 [label="GETPROP(stub)"];
  node548 -> node549 [weight=1];
  node550 [label="NAME(a)"];
  node549 -> node550 [weight=1];
  node551 [label="NAME(nameKey)"];
  node547 -> node551 [weight=1];
  node543 -> RETURN [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node536 -> node537 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node532 -> node536 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node552 [label="MEMBER_FUNCTION_DEF"];
  node23 -> node552 [weight=1];
  node553 [label="FUNCTION"];
  node552 -> node553 [weight=1];
  node554 [label="NAME"];
  node553 -> node554 [weight=1];
  node555 [label="PARAM_LIST"];
  node553 -> node555 [weight=1];
  node556 [label="NAME(a)"];
  node555 -> node556 [weight=1];
  node557 [label="BLOCK"];
  node553 -> node557 [weight=1];
  node558 [label="EXPR_RESULT"];
  node557 -> node558 [weight=1];
  node559 [label="AWAIT"];
  node558 -> node559 [weight=1];
  node560 [label="CALL"];
  node559 -> node560 [weight=1];
  node561 [label="GETPROP(CheckIniti)"];
  node560 -> node561 [weight=1];
  node562 [label="THIS"];
  node561 -> node562 [weight=1];
  node563 [label="NAME(a)"];
  node560 -> node563 [weight=1];
  node564 [label="RETURN"];
  node558 -> node564 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node557 -> node564 [weight=1];
  node565 [label="CALL"];
  node564 -> node565 [weight=1];
  node566 [label="GETPROP(toString)"];
  node565 -> node566 [weight=1];
  node567 [label="AWAIT"];
  node566 -> node567 [weight=1];
  node568 [label="CALL"];
  node567 -> node568 [weight=1];
  node569 [label="GETPROP(getState)"];
  node568 -> node569 [weight=1];
  node570 [label="GETPROP(stub)"];
  node569 -> node570 [weight=1];
  node571 [label="NAME(a)"];
  node570 -> node571 [weight=1];
  node572 [label="NAME(symbolKey)"];
  node568 -> node572 [weight=1];
  node564 -> RETURN [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node557 -> node558 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node553 -> node557 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node573 [label="MEMBER_FUNCTION_DEF"];
  node23 -> node573 [weight=1];
  node574 [label="FUNCTION"];
  node573 -> node574 [weight=1];
  node575 [label="NAME"];
  node574 -> node575 [weight=1];
  node576 [label="PARAM_LIST"];
  node574 -> node576 [weight=1];
  node577 [label="NAME(a)"];
  node576 -> node577 [weight=1];
  node578 [label="NAME(b)"];
  node576 -> node578 [weight=1];
  node579 [label="BLOCK"];
  node574 -> node579 [weight=1];
  node580 [label="EXPR_RESULT"];
  node579 -> node580 [weight=1];
  node581 [label="AWAIT"];
  node580 -> node581 [weight=1];
  node582 [label="CALL"];
  node581 -> node582 [weight=1];
  node583 [label="GETPROP(CheckIniti)"];
  node582 -> node583 [weight=1];
  node584 [label="THIS"];
  node583 -> node584 [weight=1];
  node585 [label="NAME(a)"];
  node582 -> node585 [weight=1];
  node586 [label="RETURN"];
  node580 -> node586 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node579 -> node586 [weight=1];
  node587 [label="GETPROP(tokenURI)"];
  node586 -> node587 [weight=1];
  node588 [label="AWAIT"];
  node587 -> node588 [weight=1];
  node589 [label="CALL"];
  node588 -> node589 [weight=1];
  node590 [label="GETPROP(_readNFT)"];
  node589 -> node590 [weight=1];
  node591 [label="THIS"];
  node590 -> node591 [weight=1];
  node592 [label="NAME(a)"];
  node589 -> node592 [weight=1];
  node593 [label="NAME(b)"];
  node589 -> node593 [weight=1];
  node586 -> RETURN [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node579 -> node580 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node574 -> node579 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node594 [label="MEMBER_FUNCTION_DEF"];
  node23 -> node594 [weight=1];
  node595 [label="FUNCTION"];
  node594 -> node595 [weight=1];
  node596 [label="NAME"];
  node595 -> node596 [weight=1];
  node597 [label="PARAM_LIST"];
  node595 -> node597 [weight=1];
  node598 [label="NAME(a)"];
  node597 -> node598 [weight=1];
  node599 [label="BLOCK"];
  node595 -> node599 [weight=1];
  node600 [label="EXPR_RESULT"];
  node599 -> node600 [weight=1];
  node601 [label="AWAIT"];
  node600 -> node601 [weight=1];
  node602 [label="CALL"];
  node601 -> node602 [weight=1];
  node603 [label="GETPROP(CheckIniti)"];
  node602 -> node603 [weight=1];
  node604 [label="THIS"];
  node603 -> node604 [weight=1];
  node605 [label="NAME(a)"];
  node602 -> node605 [weight=1];
  node606 [label="EXPR_RESULT"];
  node600 -> node606 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node599 -> node606 [weight=1];
  node607 [label="ASSIGN"];
  node606 -> node607 [weight=1];
  node608 [label="NAME(a)"];
  node607 -> node608 [weight=1];
  node609 [label="AWAIT"];
  node607 -> node609 [weight=1];
  node610 [label="CALL"];
  node609 -> node610 [weight=1];
  node611 [label="GETPROP(getStateBy)"];
  node610 -> node611 [weight=1];
  node612 [label="GETPROP(stub)"];
  node611 -> node612 [weight=1];
  node613 [label="NAME(a)"];
  node612 -> node613 [weight=1];
  node614 [label="NAME(nftPrefix)"];
  node610 -> node614 [weight=1];
  node615 [label="ARRAYLIT"];
  node610 -> node615 [weight=1];
  node616 [label="LET"];
  node606 -> node616 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node599 -> node616 [weight=1];
  node617 [label="NAME(b)"];
  node616 -> node617 [weight=1];
  node618 [label="NUMBER"];
  node617 -> node618 [weight=1];
  node619 [label="NAME(c)"];
  node616 -> node619 [weight=1];
  node620 [label="AWAIT"];
  node619 -> node620 [weight=1];
  node621 [label="CALL"];
  node620 -> node621 [weight=1];
  node622 [label="GETPROP(next)"];
  node621 -> node622 [weight=1];
  node623 [label="NAME(a)"];
  node622 -> node623 [weight=1];
  node624 [label="EMPTY"];
  node616 -> node624 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node625 [label="FOR"];
  node599 -> node625 [weight=1];
  node625 -> node624 [weight=1];
  node624 -> node625 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node626 [label="NOT"];
  node625 -> node626 [weight=1];
  node627 [label="GETPROP(done)"];
  node626 -> node627 [weight=1];
  node628 [label="NAME(c)"];
  node627 -> node628 [weight=1];
  node629 [label="EMPTY"];
  node625 -> node629 [weight=1];
  node629 -> node625 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node630 [label="BLOCK"];
  node625 -> node630 [weight=1];
  node631 [label="EXPR_RESULT"];
  node630 -> node631 [weight=1];
  node632 [label="COMMA"];
  node631 -> node632 [weight=1];
  node633 [label="INC"];
  node632 -> node633 [weight=1];
  node634 [label="NAME(b)"];
  node633 -> node634 [weight=1];
  node635 [label="ASSIGN"];
  node632 -> node635 [weight=1];
  node636 [label="NAME(c)"];
  node635 -> node636 [weight=1];
  node637 [label="AWAIT"];
  node635 -> node637 [weight=1];
  node638 [label="CALL"];
  node637 -> node638 [weight=1];
  node639 [label="GETPROP(next)"];
  node638 -> node639 [weight=1];
  node640 [label="NAME(a)"];
  node639 -> node640 [weight=1];
  node631 -> node629 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node630 -> node631 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node641 [label="RETURN"];
  node625 -> node630 [label="ON_TRUE", fontcolor="red", weight=0.01, color="red"];
  node625 -> node641 [label="ON_FALSE", fontcolor="red", weight=0.01, color="red"];
  node599 -> node641 [weight=1];
  node642 [label="NAME(b)"];
  node641 -> node642 [weight=1];
  node641 -> RETURN [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node599 -> node600 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node595 -> node599 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node643 [label="MEMBER_FUNCTION_DEF"];
  node23 -> node643 [weight=1];
  node644 [label="FUNCTION"];
  node643 -> node644 [weight=1];
  node645 [label="NAME"];
  node644 -> node645 [weight=1];
  node646 [label="PARAM_LIST"];
  node644 -> node646 [weight=1];
  node647 [label="NAME(a)"];
  node646 -> node647 [weight=1];
  node648 [label="NAME(b)"];
  node646 -> node648 [weight=1];
  node649 [label="NAME(c)"];
  node646 -> node649 [weight=1];
  node650 [label="BLOCK"];
  node644 -> node650 [weight=1];
  node651 [label="IF"];
  node650 -> node651 [weight=1];
  node652 [label="SHNE"];
  node651 -> node652 [weight=1];
  node653 [label="STRINGLIT(Org1MSP)"];
  node652 -> node653 [weight=1];
  node654 [label="CALL"];
  node652 -> node654 [weight=1];
  node655 [label="GETPROP(getMSPID)"];
  node654 -> node655 [weight=1];
  node656 [label="GETPROP(clientIden)"];
  node655 -> node656 [weight=1];
  node657 [label="NAME(a)"];
  node656 -> node657 [weight=1];
  node658 [label="BLOCK"];
  node651 -> node658 [weight=1];
  node659 [label="THROW"];
  node658 -> node659 [weight=1];
  node660 [label="CALL"];
  node659 -> node660 [weight=1];
  node661 [label="NAME(Error)"];
  node660 -> node661 [weight=1];
  node662 [label="STRINGLIT(client is )"];
  node660 -> node662 [weight=1];
  node658 -> node659 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node663 [label="CONST"];
  node651 -> node658 [label="ON_TRUE", fontcolor="red", weight=0.01, color="red"];
  node651 -> node663 [label="ON_FALSE", fontcolor="red", weight=0.01, color="red"];
  node650 -> node663 [weight=1];
  node664 [label="NAME(d)"];
  node663 -> node664 [weight=1];
  node665 [label="AWAIT"];
  node664 -> node665 [weight=1];
  node666 [label="CALL"];
  node665 -> node666 [weight=1];
  node667 [label="GETPROP(getState)"];
  node666 -> node667 [weight=1];
  node668 [label="GETPROP(stub)"];
  node667 -> node668 [weight=1];
  node669 [label="NAME(a)"];
  node668 -> node669 [weight=1];
  node670 [label="NAME(nameKey)"];
  node666 -> node670 [weight=1];
  node671 [label="IF"];
  node663 -> node671 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node650 -> node671 [weight=1];
  node672 [label="AND"];
  node671 -> node672 [weight=1];
  node673 [label="NAME(d)"];
  node672 -> node673 [weight=1];
  node674 [label="LT"];
  node672 -> node674 [weight=1];
  node675 [label="NUMBER"];
  node674 -> node675 [weight=1];
  node676 [label="GETPROP(length)"];
  node674 -> node676 [weight=1];
  node677 [label="NAME(d)"];
  node676 -> node677 [weight=1];
  node678 [label="BLOCK"];
  node671 -> node678 [weight=1];
  node679 [label="THROW"];
  node678 -> node679 [weight=1];
  node680 [label="CALL"];
  node679 -> node680 [weight=1];
  node681 [label="NAME(Error)"];
  node680 -> node681 [weight=1];
  node682 [label="STRINGLIT(contract o)"];
  node680 -> node682 [weight=1];
  node678 -> node679 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node683 [label="EXPR_RESULT"];
  node671 -> node678 [label="ON_TRUE", fontcolor="red", weight=0.01, color="red"];
  node671 -> node683 [label="ON_FALSE", fontcolor="red", weight=0.01, color="red"];
  node650 -> node683 [weight=1];
  node684 [label="AWAIT"];
  node683 -> node684 [weight=1];
  node685 [label="CALL"];
  node684 -> node685 [weight=1];
  node686 [label="GETPROP(putState)"];
  node685 -> node686 [weight=1];
  node687 [label="GETPROP(stub)"];
  node686 -> node687 [weight=1];
  node688 [label="NAME(a)"];
  node687 -> node688 [weight=1];
  node689 [label="NAME(nameKey)"];
  node685 -> node689 [weight=1];
  node690 [label="CALL"];
  node685 -> node690 [weight=1];
  node691 [label="GETPROP(from)"];
  node690 -> node691 [weight=1];
  node692 [label="NAME(Buffer)"];
  node691 -> node692 [weight=1];
  node693 [label="NAME(b)"];
  node690 -> node693 [weight=1];
  node694 [label="EXPR_RESULT"];
  node683 -> node694 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node650 -> node694 [weight=1];
  node695 [label="AWAIT"];
  node694 -> node695 [weight=1];
  node696 [label="CALL"];
  node695 -> node696 [weight=1];
  node697 [label="GETPROP(putState)"];
  node696 -> node697 [weight=1];
  node698 [label="GETPROP(stub)"];
  node697 -> node698 [weight=1];
  node699 [label="NAME(a)"];
  node698 -> node699 [weight=1];
  node700 [label="NAME(symbolKey)"];
  node696 -> node700 [weight=1];
  node701 [label="CALL"];
  node696 -> node701 [weight=1];
  node702 [label="GETPROP(from)"];
  node701 -> node702 [weight=1];
  node703 [label="NAME(Buffer)"];
  node702 -> node703 [weight=1];
  node704 [label="NAME(c)"];
  node701 -> node704 [weight=1];
  node705 [label="RETURN"];
  node694 -> node705 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node650 -> node705 [weight=1];
  node706 [label="NOT"];
  node705 -> node706 [weight=1];
  node707 [label="NUMBER"];
  node706 -> node707 [weight=1];
  node705 -> RETURN [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node650 -> node651 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node644 -> node650 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node708 [label="MEMBER_FUNCTION_DEF"];
  node23 -> node708 [weight=1];
  node709 [label="FUNCTION"];
  node708 -> node709 [weight=1];
  node710 [label="NAME"];
  node709 -> node710 [weight=1];
  node711 [label="PARAM_LIST"];
  node709 -> node711 [weight=1];
  node712 [label="NAME(a)"];
  node711 -> node712 [weight=1];
  node713 [label="NAME(b)"];
  node711 -> node713 [weight=1];
  node714 [label="NAME(c)"];
  node711 -> node714 [weight=1];
  node715 [label="BLOCK"];
  node709 -> node715 [weight=1];
  node716 [label="EXPR_RESULT"];
  node715 -> node716 [weight=1];
  node717 [label="AWAIT"];
  node716 -> node717 [weight=1];
  node718 [label="CALL"];
  node717 -> node718 [weight=1];
  node719 [label="GETPROP(CheckIniti)"];
  node718 -> node719 [weight=1];
  node720 [label="THIS"];
  node719 -> node720 [weight=1];
  node721 [label="NAME(a)"];
  node718 -> node721 [weight=1];
  node722 [label="IF"];
  node716 -> node722 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node715 -> node722 [weight=1];
  node723 [label="SHNE"];
  node722 -> node723 [weight=1];
  node724 [label="STRINGLIT(Org1MSP)"];
  node723 -> node724 [weight=1];
  node725 [label="CALL"];
  node723 -> node725 [weight=1];
  node726 [label="GETPROP(getMSPID)"];
  node725 -> node726 [weight=1];
  node727 [label="GETPROP(clientIden)"];
  node726 -> node727 [weight=1];
  node728 [label="NAME(a)"];
  node727 -> node728 [weight=1];
  node729 [label="BLOCK"];
  node722 -> node729 [weight=1];
  node730 [label="THROW"];
  node729 -> node730 [weight=1];
  node731 [label="CALL"];
  node730 -> node731 [weight=1];
  node732 [label="NAME(Error)"];
  node731 -> node732 [weight=1];
  node733 [label="STRINGLIT(client is )"];
  node731 -> node733 [weight=1];
  node729 -> node730 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node734 [label="CONST"];
  node722 -> node729 [label="ON_TRUE", fontcolor="red", weight=0.01, color="red"];
  node722 -> node734 [label="ON_FALSE", fontcolor="red", weight=0.01, color="red"];
  node715 -> node734 [weight=1];
  node735 [label="NAME(d)"];
  node734 -> node735 [weight=1];
  node736 [label="CALL"];
  node735 -> node736 [weight=1];
  node737 [label="GETPROP(getID)"];
  node736 -> node737 [weight=1];
  node738 [label="GETPROP(clientIden)"];
  node737 -> node738 [weight=1];
  node739 [label="NAME(a)"];
  node738 -> node739 [weight=1];
  node740 [label="IF"];
  node734 -> node740 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node715 -> node740 [weight=1];
  node741 [label="AWAIT"];
  node740 -> node741 [weight=1];
  node742 [label="CALL"];
  node741 -> node742 [weight=1];
  node743 [label="GETPROP(_nftExists)"];
  node742 -> node743 [weight=1];
  node744 [label="THIS"];
  node743 -> node744 [weight=1];
  node745 [label="NAME(a)"];
  node742 -> node745 [weight=1];
  node746 [label="NAME(b)"];
  node742 -> node746 [weight=1];
  node747 [label="BLOCK"];
  node740 -> node747 [weight=1];
  node748 [label="THROW"];
  node747 -> node748 [weight=1];
  node749 [label="CALL"];
  node748 -> node749 [weight=1];
  node750 [label="NAME(Error)"];
  node749 -> node750 [weight=1];
  node751 [label="TEMPLATELIT"];
  node749 -> node751 [weight=1];
  node752 [label="TEMPLATELIT_STRING"];
  node751 -> node752 [weight=1];
  node753 [label="TEMPLATELIT_SUB"];
  node751 -> node753 [weight=1];
  node754 [label="NAME(b)"];
  node753 -> node754 [weight=1];
  node755 [label="TEMPLATELIT_STRING"];
  node751 -> node755 [weight=1];
  node747 -> node748 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node756 [label="CONST"];
  node740 -> node747 [label="ON_TRUE", fontcolor="red", weight=0.01, color="red"];
  node740 -> node756 [label="ON_FALSE", fontcolor="red", weight=0.01, color="red"];
  node715 -> node756 [weight=1];
  node757 [label="NAME(f)"];
  node756 -> node757 [weight=1];
  node758 [label="CALL"];
  node757 -> node758 [weight=1];
  node759 [label="NAME(parseInt)"];
  node758 -> node759 [weight=1];
  node760 [label="NAME(b)"];
  node758 -> node760 [weight=1];
  node761 [label="IF"];
  node756 -> node761 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node715 -> node761 [weight=1];
  node762 [label="CALL"];
  node761 -> node762 [weight=1];
  node763 [label="NAME(isNaN)"];
  node762 -> node763 [weight=1];
  node764 [label="NAME(f)"];
  node762 -> node764 [weight=1];
  node765 [label="BLOCK"];
  node761 -> node765 [weight=1];
  node766 [label="THROW"];
  node765 -> node766 [weight=1];
  node767 [label="CALL"];
  node766 -> node767 [weight=1];
  node768 [label="NAME(Error)"];
  node767 -> node768 [weight=1];
  node769 [label="TEMPLATELIT"];
  node767 -> node769 [weight=1];
  node770 [label="TEMPLATELIT_STRING"];
  node769 -> node770 [weight=1];
  node771 [label="TEMPLATELIT_SUB"];
  node769 -> node771 [weight=1];
  node772 [label="NAME(b)"];
  node771 -> node772 [weight=1];
  node773 [label="TEMPLATELIT_STRING"];
  node769 -> node773 [weight=1];
  node765 -> node766 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node774 [label="EXPR_RESULT"];
  node761 -> node765 [label="ON_TRUE", fontcolor="red", weight=0.01, color="red"];
  node761 -> node774 [label="ON_FALSE", fontcolor="red", weight=0.01, color="red"];
  node715 -> node774 [weight=1];
  node775 [label="ASSIGN"];
  node774 -> node775 [weight=1];
  node776 [label="NAME(c)"];
  node775 -> node776 [weight=1];
  node777 [label="OBJECTLIT"];
  node775 -> node777 [weight=1];
  node778 [label="STRING_KEY(tokenId)"];
  node777 -> node778 [weight=1];
  node779 [label="NAME(f)"];
  node778 -> node779 [weight=1];
  node780 [label="STRING_KEY(owner)"];
  node777 -> node780 [weight=1];
  node781 [label="NAME(d)"];
  node780 -> node781 [weight=1];
  node782 [label="STRING_KEY(tokenURI)"];
  node777 -> node782 [weight=1];
  node783 [label="NAME(c)"];
  node782 -> node783 [weight=1];
  node784 [label="CONST"];
  node774 -> node784 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node715 -> node784 [weight=1];
  node785 [label="NAME(e)"];
  node784 -> node785 [weight=1];
  node786 [label="CALL"];
  node785 -> node786 [weight=1];
  node787 [label="GETPROP(createComp)"];
  node786 -> node787 [weight=1];
  node788 [label="GETPROP(stub)"];
  node787 -> node788 [weight=1];
  node789 [label="NAME(a)"];
  node788 -> node789 [weight=1];
  node790 [label="NAME(nftPrefix)"];
  node786 -> node790 [weight=1];
  node791 [label="ARRAYLIT"];
  node786 -> node791 [weight=1];
  node792 [label="NAME(b)"];
  node791 -> node792 [weight=1];
  node793 [label="EXPR_RESULT"];
  node784 -> node793 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node715 -> node793 [weight=1];
  node794 [label="AWAIT"];
  node793 -> node794 [weight=1];
  node795 [label="CALL"];
  node794 -> node795 [weight=1];
  node796 [label="GETPROP(putState)"];
  node795 -> node796 [weight=1];
  node797 [label="GETPROP(stub)"];
  node796 -> node797 [weight=1];
  node798 [label="NAME(a)"];
  node797 -> node798 [weight=1];
  node799 [label="NAME(e)"];
  node795 -> node799 [weight=1];
  node800 [label="CALL"];
  node795 -> node800 [weight=1];
  node801 [label="GETPROP(from)"];
  node800 -> node801 [weight=1];
  node802 [label="NAME(Buffer)"];
  node801 -> node802 [weight=1];
  node803 [label="CALL"];
  node800 -> node803 [weight=1];
  node804 [label="GETPROP(stringify)"];
  node803 -> node804 [weight=1];
  node805 [label="NAME(JSON)"];
  node804 -> node805 [weight=1];
  node806 [label="NAME(c)"];
  node803 -> node806 [weight=1];
  node807 [label="EXPR_RESULT"];
  node793 -> node807 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node715 -> node807 [weight=1];
  node808 [label="ASSIGN"];
  node807 -> node808 [weight=1];
  node809 [label="NAME(b)"];
  node808 -> node809 [weight=1];
  node810 [label="CALL"];
  node808 -> node810 [weight=1];
  node811 [label="GETPROP(createComp)"];
  node810 -> node811 [weight=1];
  node812 [label="GETPROP(stub)"];
  node811 -> node812 [weight=1];
  node813 [label="NAME(a)"];
  node812 -> node813 [weight=1];
  node814 [label="NAME(balancePre)"];
  node810 -> node814 [weight=1];
  node815 [label="ARRAYLIT"];
  node810 -> node815 [weight=1];
  node816 [label="NAME(d)"];
  node815 -> node816 [weight=1];
  node817 [label="NAME(b)"];
  node815 -> node817 [weight=1];
  node818 [label="EXPR_RESULT"];
  node807 -> node818 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node715 -> node818 [weight=1];
  node819 [label="AWAIT"];
  node818 -> node819 [weight=1];
  node820 [label="CALL"];
  node819 -> node820 [weight=1];
  node821 [label="GETPROP(putState)"];
  node820 -> node821 [weight=1];
  node822 [label="GETPROP(stub)"];
  node821 -> node822 [weight=1];
  node823 [label="NAME(a)"];
  node822 -> node823 [weight=1];
  node824 [label="NAME(b)"];
  node820 -> node824 [weight=1];
  node825 [label="CALL"];
  node820 -> node825 [weight=1];
  node826 [label="GETPROP(from)"];
  node825 -> node826 [weight=1];
  node827 [label="NAME(Buffer)"];
  node826 -> node827 [weight=1];
  node828 [label="STRINGLIT"];
  node825 -> node828 [weight=1];
  node829 [label="EXPR_RESULT"];
  node818 -> node829 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node715 -> node829 [weight=1];
  node830 [label="CALL"];
  node829 -> node830 [weight=1];
  node831 [label="GETPROP(setEvent)"];
  node830 -> node831 [weight=1];
  node832 [label="GETPROP(stub)"];
  node831 -> node832 [weight=1];
  node833 [label="NAME(a)"];
  node832 -> node833 [weight=1];
  node834 [label="STRINGLIT(Transfer)"];
  node830 -> node834 [weight=1];
  node835 [label="CALL"];
  node830 -> node835 [weight=1];
  node836 [label="GETPROP(from)"];
  node835 -> node836 [weight=1];
  node837 [label="NAME(Buffer)"];
  node836 -> node837 [weight=1];
  node838 [label="CALL"];
  node835 -> node838 [weight=1];
  node839 [label="GETPROP(stringify)"];
  node838 -> node839 [weight=1];
  node840 [label="NAME(JSON)"];
  node839 -> node840 [weight=1];
  node841 [label="OBJECTLIT"];
  node838 -> node841 [weight=1];
  node842 [label="STRING_KEY(from)"];
  node841 -> node842 [weight=1];
  node843 [label="STRINGLIT(0x0)"];
  node842 -> node843 [weight=1];
  node844 [label="STRING_KEY(to)"];
  node841 -> node844 [weight=1];
  node845 [label="NAME(d)"];
  node844 -> node845 [weight=1];
  node846 [label="STRING_KEY(tokenId)"];
  node841 -> node846 [weight=1];
  node847 [label="NAME(f)"];
  node846 -> node847 [weight=1];
  node848 [label="RETURN"];
  node829 -> node848 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node715 -> node848 [weight=1];
  node849 [label="NAME(c)"];
  node848 -> node849 [weight=1];
  node848 -> RETURN [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node715 -> node716 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node709 -> node715 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node850 [label="MEMBER_FUNCTION_DEF"];
  node23 -> node850 [weight=1];
  node851 [label="FUNCTION"];
  node850 -> node851 [weight=1];
  node852 [label="NAME"];
  node851 -> node852 [weight=1];
  node853 [label="PARAM_LIST"];
  node851 -> node853 [weight=1];
  node854 [label="NAME(a)"];
  node853 -> node854 [weight=1];
  node855 [label="NAME(b)"];
  node853 -> node855 [weight=1];
  node856 [label="BLOCK"];
  node851 -> node856 [weight=1];
  node857 [label="EXPR_RESULT"];
  node856 -> node857 [weight=1];
  node858 [label="AWAIT"];
  node857 -> node858 [weight=1];
  node859 [label="CALL"];
  node858 -> node859 [weight=1];
  node860 [label="GETPROP(CheckIniti)"];
  node859 -> node860 [weight=1];
  node861 [label="THIS"];
  node860 -> node861 [weight=1];
  node862 [label="NAME(a)"];
  node859 -> node862 [weight=1];
  node863 [label="CONST"];
  node857 -> node863 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node856 -> node863 [weight=1];
  node864 [label="NAME(c)"];
  node863 -> node864 [weight=1];
  node865 [label="CALL"];
  node864 -> node865 [weight=1];
  node866 [label="GETPROP(getID)"];
  node865 -> node866 [weight=1];
  node867 [label="GETPROP(clientIden)"];
  node866 -> node867 [weight=1];
  node868 [label="NAME(a)"];
  node867 -> node868 [weight=1];
  node869 [label="IF"];
  node863 -> node869 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node856 -> node869 [weight=1];
  node870 [label="SHNE"];
  node869 -> node870 [weight=1];
  node871 [label="GETPROP(owner)"];
  node870 -> node871 [weight=1];
  node872 [label="AWAIT"];
  node871 -> node872 [weight=1];
  node873 [label="CALL"];
  node872 -> node873 [weight=1];
  node874 [label="GETPROP(_readNFT)"];
  node873 -> node874 [weight=1];
  node875 [label="THIS"];
  node874 -> node875 [weight=1];
  node876 [label="NAME(a)"];
  node873 -> node876 [weight=1];
  node877 [label="NAME(b)"];
  node873 -> node877 [weight=1];
  node878 [label="NAME(c)"];
  node870 -> node878 [weight=1];
  node879 [label="BLOCK"];
  node869 -> node879 [weight=1];
  node880 [label="THROW"];
  node879 -> node880 [weight=1];
  node881 [label="CALL"];
  node880 -> node881 [weight=1];
  node882 [label="NAME(Error)"];
  node881 -> node882 [weight=1];
  node883 [label="TEMPLATELIT"];
  node881 -> node883 [weight=1];
  node884 [label="TEMPLATELIT_STRING"];
  node883 -> node884 [weight=1];
  node885 [label="TEMPLATELIT_SUB"];
  node883 -> node885 [weight=1];
  node886 [label="NAME(b)"];
  node885 -> node886 [weight=1];
  node887 [label="TEMPLATELIT_STRING"];
  node883 -> node887 [weight=1];
  node888 [label="TEMPLATELIT_SUB"];
  node883 -> node888 [weight=1];
  node889 [label="NAME(c)"];
  node888 -> node889 [weight=1];
  node890 [label="TEMPLATELIT_STRING"];
  node883 -> node890 [weight=1];
  node879 -> node880 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node891 [label="VAR"];
  node869 -> node879 [label="ON_TRUE", fontcolor="red", weight=0.01, color="red"];
  node869 -> node891 [label="ON_FALSE", fontcolor="red", weight=0.01, color="red"];
  node856 -> node891 [weight=1];
  node892 [label="NAME(d)"];
  node891 -> node892 [weight=1];
  node893 [label="CALL"];
  node892 -> node893 [weight=1];
  node894 [label="GETPROP(createComp)"];
  node893 -> node894 [weight=1];
  node895 [label="GETPROP(stub)"];
  node894 -> node895 [weight=1];
  node896 [label="NAME(a)"];
  node895 -> node896 [weight=1];
  node897 [label="NAME(nftPrefix)"];
  node893 -> node897 [weight=1];
  node898 [label="ARRAYLIT"];
  node893 -> node898 [weight=1];
  node899 [label="NAME(b)"];
  node898 -> node899 [weight=1];
  node900 [label="EXPR_RESULT"];
  node891 -> node900 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node856 -> node900 [weight=1];
  node901 [label="AWAIT"];
  node900 -> node901 [weight=1];
  node902 [label="CALL"];
  node901 -> node902 [weight=1];
  node903 [label="GETPROP(deleteStat)"];
  node902 -> node903 [weight=1];
  node904 [label="GETPROP(stub)"];
  node903 -> node904 [weight=1];
  node905 [label="NAME(a)"];
  node904 -> node905 [weight=1];
  node906 [label="NAME(d)"];
  node902 -> node906 [weight=1];
  node907 [label="EXPR_RESULT"];
  node900 -> node907 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node856 -> node907 [weight=1];
  node908 [label="ASSIGN"];
  node907 -> node908 [weight=1];
  node909 [label="NAME(d)"];
  node908 -> node909 [weight=1];
  node910 [label="CALL"];
  node908 -> node910 [weight=1];
  node911 [label="GETPROP(createComp)"];
  node910 -> node911 [weight=1];
  node912 [label="GETPROP(stub)"];
  node911 -> node912 [weight=1];
  node913 [label="NAME(a)"];
  node912 -> node913 [weight=1];
  node914 [label="NAME(balancePre)"];
  node910 -> node914 [weight=1];
  node915 [label="ARRAYLIT"];
  node910 -> node915 [weight=1];
  node916 [label="NAME(c)"];
  node915 -> node916 [weight=1];
  node917 [label="NAME(b)"];
  node915 -> node917 [weight=1];
  node918 [label="EXPR_RESULT"];
  node907 -> node918 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node856 -> node918 [weight=1];
  node919 [label="AWAIT"];
  node918 -> node919 [weight=1];
  node920 [label="CALL"];
  node919 -> node920 [weight=1];
  node921 [label="GETPROP(deleteStat)"];
  node920 -> node921 [weight=1];
  node922 [label="GETPROP(stub)"];
  node921 -> node922 [weight=1];
  node923 [label="NAME(a)"];
  node922 -> node923 [weight=1];
  node924 [label="NAME(d)"];
  node920 -> node924 [weight=1];
  node925 [label="EXPR_RESULT"];
  node918 -> node925 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node856 -> node925 [weight=1];
  node926 [label="ASSIGN"];
  node925 -> node926 [weight=1];
  node927 [label="NAME(b)"];
  node926 -> node927 [weight=1];
  node928 [label="CALL"];
  node926 -> node928 [weight=1];
  node929 [label="NAME(parseInt)"];
  node928 -> node929 [weight=1];
  node930 [label="NAME(b)"];
  node928 -> node930 [weight=1];
  node931 [label="EXPR_RESULT"];
  node925 -> node931 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node856 -> node931 [weight=1];
  node932 [label="CALL"];
  node931 -> node932 [weight=1];
  node933 [label="GETPROP(setEvent)"];
  node932 -> node933 [weight=1];
  node934 [label="GETPROP(stub)"];
  node933 -> node934 [weight=1];
  node935 [label="NAME(a)"];
  node934 -> node935 [weight=1];
  node936 [label="STRINGLIT(Transfer)"];
  node932 -> node936 [weight=1];
  node937 [label="CALL"];
  node932 -> node937 [weight=1];
  node938 [label="GETPROP(from)"];
  node937 -> node938 [weight=1];
  node939 [label="NAME(Buffer)"];
  node938 -> node939 [weight=1];
  node940 [label="CALL"];
  node937 -> node940 [weight=1];
  node941 [label="GETPROP(stringify)"];
  node940 -> node941 [weight=1];
  node942 [label="NAME(JSON)"];
  node941 -> node942 [weight=1];
  node943 [label="OBJECTLIT"];
  node940 -> node943 [weight=1];
  node944 [label="STRING_KEY(from)"];
  node943 -> node944 [weight=1];
  node945 [label="NAME(c)"];
  node944 -> node945 [weight=1];
  node946 [label="STRING_KEY(to)"];
  node943 -> node946 [weight=1];
  node947 [label="STRINGLIT(0x0)"];
  node946 -> node947 [weight=1];
  node948 [label="STRING_KEY(tokenId)"];
  node943 -> node948 [weight=1];
  node949 [label="NAME(b)"];
  node948 -> node949 [weight=1];
  node950 [label="RETURN"];
  node931 -> node950 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node856 -> node950 [weight=1];
  node951 [label="NOT"];
  node950 -> node951 [weight=1];
  node952 [label="NUMBER"];
  node951 -> node952 [weight=1];
  node950 -> RETURN [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node856 -> node857 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node851 -> node856 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node953 [label="MEMBER_FUNCTION_DEF"];
  node23 -> node953 [weight=1];
  node954 [label="FUNCTION"];
  node953 -> node954 [weight=1];
  node955 [label="NAME"];
  node954 -> node955 [weight=1];
  node956 [label="PARAM_LIST"];
  node954 -> node956 [weight=1];
  node957 [label="NAME(a)"];
  node956 -> node957 [weight=1];
  node958 [label="NAME(b)"];
  node956 -> node958 [weight=1];
  node959 [label="BLOCK"];
  node954 -> node959 [weight=1];
  node960 [label="CONST"];
  node959 -> node960 [weight=1];
  node961 [label="NAME(c)"];
  node960 -> node961 [weight=1];
  node962 [label="CALL"];
  node961 -> node962 [weight=1];
  node963 [label="GETPROP(createComp)"];
  node962 -> node963 [weight=1];
  node964 [label="GETPROP(stub)"];
  node963 -> node964 [weight=1];
  node965 [label="NAME(a)"];
  node964 -> node965 [weight=1];
  node966 [label="NAME(nftPrefix)"];
  node962 -> node966 [weight=1];
  node967 [label="ARRAYLIT"];
  node962 -> node967 [weight=1];
  node968 [label="NAME(b)"];
  node967 -> node968 [weight=1];
  node969 [label="EXPR_RESULT"];
  node960 -> node969 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node959 -> node969 [weight=1];
  node970 [label="ASSIGN"];
  node969 -> node970 [weight=1];
  node971 [label="NAME(a)"];
  node970 -> node971 [weight=1];
  node972 [label="AWAIT"];
  node970 -> node972 [weight=1];
  node973 [label="CALL"];
  node972 -> node973 [weight=1];
  node974 [label="GETPROP(getState)"];
  node973 -> node974 [weight=1];
  node975 [label="GETPROP(stub)"];
  node974 -> node975 [weight=1];
  node976 [label="NAME(a)"];
  node975 -> node976 [weight=1];
  node977 [label="NAME(c)"];
  node973 -> node977 [weight=1];
  node978 [label="IF"];
  node969 -> node978 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node959 -> node978 [weight=1];
  node979 [label="OR"];
  node978 -> node979 [weight=1];
  node980 [label="NOT"];
  node979 -> node980 [weight=1];
  node981 [label="NAME(a)"];
  node980 -> node981 [weight=1];
  node982 [label="SHEQ"];
  node979 -> node982 [weight=1];
  node983 [label="NUMBER"];
  node982 -> node983 [weight=1];
  node984 [label="GETPROP(length)"];
  node982 -> node984 [weight=1];
  node985 [label="NAME(a)"];
  node984 -> node985 [weight=1];
  node986 [label="BLOCK"];
  node978 -> node986 [weight=1];
  node987 [label="THROW"];
  node986 -> node987 [weight=1];
  node988 [label="CALL"];
  node987 -> node988 [weight=1];
  node989 [label="NAME(Error)"];
  node988 -> node989 [weight=1];
  node990 [label="TEMPLATELIT"];
  node988 -> node990 [weight=1];
  node991 [label="TEMPLATELIT_STRING"];
  node990 -> node991 [weight=1];
  node992 [label="TEMPLATELIT_SUB"];
  node990 -> node992 [weight=1];
  node993 [label="NAME(b)"];
  node992 -> node993 [weight=1];
  node994 [label="TEMPLATELIT_STRING"];
  node990 -> node994 [weight=1];
  node986 -> node987 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node995 [label="RETURN"];
  node978 -> node986 [label="ON_TRUE", fontcolor="red", weight=0.01, color="red"];
  node978 -> node995 [label="ON_FALSE", fontcolor="red", weight=0.01, color="red"];
  node959 -> node995 [weight=1];
  node996 [label="CALL"];
  node995 -> node996 [weight=1];
  node997 [label="GETPROP(parse)"];
  node996 -> node997 [weight=1];
  node998 [label="NAME(JSON)"];
  node997 -> node998 [weight=1];
  node999 [label="CALL"];
  node996 -> node999 [weight=1];
  node1000 [label="GETPROP(toString)"];
  node999 -> node1000 [weight=1];
  node1001 [label="NAME(a)"];
  node1000 -> node1001 [weight=1];
  node995 -> RETURN [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node959 -> node960 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node954 -> node959 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node1002 [label="MEMBER_FUNCTION_DEF"];
  node23 -> node1002 [weight=1];
  node1003 [label="FUNCTION"];
  node1002 -> node1003 [weight=1];
  node1004 [label="NAME"];
  node1003 -> node1004 [weight=1];
  node1005 [label="PARAM_LIST"];
  node1003 -> node1005 [weight=1];
  node1006 [label="NAME(a)"];
  node1005 -> node1006 [weight=1];
  node1007 [label="NAME(b)"];
  node1005 -> node1007 [weight=1];
  node1008 [label="BLOCK"];
  node1003 -> node1008 [weight=1];
  node1009 [label="EXPR_RESULT"];
  node1008 -> node1009 [weight=1];
  node1010 [label="ASSIGN"];
  node1009 -> node1010 [weight=1];
  node1011 [label="NAME(b)"];
  node1010 -> node1011 [weight=1];
  node1012 [label="CALL"];
  node1010 -> node1012 [weight=1];
  node1013 [label="GETPROP(createComp)"];
  node1012 -> node1013 [weight=1];
  node1014 [label="GETPROP(stub)"];
  node1013 -> node1014 [weight=1];
  node1015 [label="NAME(a)"];
  node1014 -> node1015 [weight=1];
  node1016 [label="NAME(nftPrefix)"];
  node1012 -> node1016 [weight=1];
  node1017 [label="ARRAYLIT"];
  node1012 -> node1017 [weight=1];
  node1018 [label="NAME(b)"];
  node1017 -> node1018 [weight=1];
  node1019 [label="RETURN"];
  node1009 -> node1019 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node1008 -> node1019 [weight=1];
  node1020 [label="AND"];
  node1019 -> node1020 [weight=1];
  node1021 [label="ASSIGN"];
  node1020 -> node1021 [weight=1];
  node1022 [label="NAME(a)"];
  node1021 -> node1022 [weight=1];
  node1023 [label="AWAIT"];
  node1021 -> node1023 [weight=1];
  node1024 [label="CALL"];
  node1023 -> node1024 [weight=1];
  node1025 [label="GETPROP(getState)"];
  node1024 -> node1025 [weight=1];
  node1026 [label="GETPROP(stub)"];
  node1025 -> node1026 [weight=1];
  node1027 [label="NAME(a)"];
  node1026 -> node1027 [weight=1];
  node1028 [label="NAME(b)"];
  node1024 -> node1028 [weight=1];
  node1029 [label="LT"];
  node1020 -> node1029 [weight=1];
  node1030 [label="NUMBER"];
  node1029 -> node1030 [weight=1];
  node1031 [label="GETPROP(length)"];
  node1029 -> node1031 [weight=1];
  node1032 [label="NAME(a)"];
  node1031 -> node1032 [weight=1];
  node1019 -> RETURN [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node1008 -> node1009 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node1003 -> node1008 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node1033 [label="MEMBER_FUNCTION_DEF"];
  node23 -> node1033 [weight=1];
  node1034 [label="FUNCTION"];
  node1033 -> node1034 [weight=1];
  node1035 [label="NAME"];
  node1034 -> node1035 [weight=1];
  node1036 [label="PARAM_LIST"];
  node1034 -> node1036 [weight=1];
  node1037 [label="NAME(a)"];
  node1036 -> node1037 [weight=1];
  node1038 [label="BLOCK"];
  node1034 -> node1038 [weight=1];
  node1039 [label="EXPR_RESULT"];
  node1038 -> node1039 [weight=1];
  node1040 [label="AWAIT"];
  node1039 -> node1040 [weight=1];
  node1041 [label="CALL"];
  node1040 -> node1041 [weight=1];
  node1042 [label="GETPROP(CheckIniti)"];
  node1041 -> node1042 [weight=1];
  node1043 [label="THIS"];
  node1042 -> node1043 [weight=1];
  node1044 [label="NAME(a)"];
  node1041 -> node1044 [weight=1];
  node1045 [label="CONST"];
  node1039 -> node1045 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node1038 -> node1045 [weight=1];
  node1046 [label="NAME(b)"];
  node1045 -> node1046 [weight=1];
  node1047 [label="CALL"];
  node1046 -> node1047 [weight=1];
  node1048 [label="GETPROP(getID)"];
  node1047 -> node1048 [weight=1];
  node1049 [label="GETPROP(clientIden)"];
  node1048 -> node1049 [weight=1];
  node1050 [label="NAME(a)"];
  node1049 -> node1050 [weight=1];
  node1051 [label="RETURN"];
  node1045 -> node1051 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node1038 -> node1051 [weight=1];
  node1052 [label="CALL"];
  node1051 -> node1052 [weight=1];
  node1053 [label="GETPROP(BalanceOf)"];
  node1052 -> node1053 [weight=1];
  node1054 [label="THIS"];
  node1053 -> node1054 [weight=1];
  node1055 [label="NAME(a)"];
  node1052 -> node1055 [weight=1];
  node1056 [label="NAME(b)"];
  node1052 -> node1056 [weight=1];
  node1051 -> RETURN [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node1038 -> node1039 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node1034 -> node1038 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node1057 [label="MEMBER_FUNCTION_DEF"];
  node23 -> node1057 [weight=1];
  node1058 [label="FUNCTION"];
  node1057 -> node1058 [weight=1];
  node1059 [label="NAME"];
  node1058 -> node1059 [weight=1];
  node1060 [label="PARAM_LIST"];
  node1058 -> node1060 [weight=1];
  node1061 [label="NAME(a)"];
  node1060 -> node1061 [weight=1];
  node1062 [label="BLOCK"];
  node1058 -> node1062 [weight=1];
  node1063 [label="EXPR_RESULT"];
  node1062 -> node1063 [weight=1];
  node1064 [label="AWAIT"];
  node1063 -> node1064 [weight=1];
  node1065 [label="CALL"];
  node1064 -> node1065 [weight=1];
  node1066 [label="GETPROP(CheckIniti)"];
  node1065 -> node1066 [weight=1];
  node1067 [label="THIS"];
  node1066 -> node1067 [weight=1];
  node1068 [label="NAME(a)"];
  node1065 -> node1068 [weight=1];
  node1069 [label="RETURN"];
  node1063 -> node1069 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node1062 -> node1069 [weight=1];
  node1070 [label="CALL"];
  node1069 -> node1070 [weight=1];
  node1071 [label="GETPROP(getID)"];
  node1070 -> node1071 [weight=1];
  node1072 [label="GETPROP(clientIden)"];
  node1071 -> node1072 [weight=1];
  node1073 [label="NAME(a)"];
  node1072 -> node1073 [weight=1];
  node1069 -> RETURN [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node1062 -> node1063 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node1058 -> node1062 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node1074 [label="MEMBER_FUNCTION_DEF"];
  node23 -> node1074 [weight=1];
  node1075 [label="FUNCTION"];
  node1074 -> node1075 [weight=1];
  node1076 [label="NAME"];
  node1075 -> node1076 [weight=1];
  node1077 [label="PARAM_LIST"];
  node1075 -> node1077 [weight=1];
  node1078 [label="NAME(a)"];
  node1077 -> node1078 [weight=1];
  node1079 [label="BLOCK"];
  node1075 -> node1079 [weight=1];
  node1080 [label="EXPR_RESULT"];
  node1079 -> node1080 [weight=1];
  node1081 [label="ASSIGN"];
  node1080 -> node1081 [weight=1];
  node1082 [label="NAME(a)"];
  node1081 -> node1082 [weight=1];
  node1083 [label="AWAIT"];
  node1081 -> node1083 [weight=1];
  node1084 [label="CALL"];
  node1083 -> node1084 [weight=1];
  node1085 [label="GETPROP(getState)"];
  node1084 -> node1085 [weight=1];
  node1086 [label="GETPROP(stub)"];
  node1085 -> node1086 [weight=1];
  node1087 [label="NAME(a)"];
  node1086 -> node1087 [weight=1];
  node1088 [label="NAME(nameKey)"];
  node1084 -> node1088 [weight=1];
  node1089 [label="IF"];
  node1080 -> node1089 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node1079 -> node1089 [weight=1];
  node1090 [label="OR"];
  node1089 -> node1090 [weight=1];
  node1091 [label="NOT"];
  node1090 -> node1091 [weight=1];
  node1092 [label="NAME(a)"];
  node1091 -> node1092 [weight=1];
  node1093 [label="SHEQ"];
  node1090 -> node1093 [weight=1];
  node1094 [label="NUMBER"];
  node1093 -> node1094 [weight=1];
  node1095 [label="GETPROP(length)"];
  node1093 -> node1095 [weight=1];
  node1096 [label="NAME(a)"];
  node1095 -> node1096 [weight=1];
  node1097 [label="BLOCK"];
  node1089 -> node1097 [weight=1];
  node1098 [label="THROW"];
  node1097 -> node1098 [weight=1];
  node1099 [label="CALL"];
  node1098 -> node1099 [weight=1];
  node1100 [label="NAME(Error)"];
  node1099 -> node1100 [weight=1];
  node1101 [label="STRINGLIT(contract o)"];
  node1099 -> node1101 [weight=1];
  node1097 -> node1098 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node1089 -> RETURN [label="ON_FALSE", fontcolor="red", weight=0.01, color="red"];
  node1089 -> node1097 [label="ON_TRUE", fontcolor="red", weight=0.01, color="red"];
  node1079 -> node1080 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node1075 -> node1079 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node1102 [label="EXPR_RESULT"];
  node20 -> node1102 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node1 -> node1102 [weight=1];
  node1103 [label="ASSIGN"];
  node1102 -> node1103 [weight=1];
  node1104 [label="GETPROP(exports)"];
  node1103 -> node1104 [weight=1];
  node1105 [label="NAME(module)"];
  node1104 -> node1105 [weight=1];
  node1106 [label="NAME(TokenERC72)"];
  node1103 -> node1106 [weight=1];
  node1102 -> RETURN [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node1 -> node2 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
  node0 -> node1 [label="UNCOND", fontcolor="red", weight=0.01, color="red"];
}

